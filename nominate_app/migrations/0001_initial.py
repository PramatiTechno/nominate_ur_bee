# Generated by Django 2.1 on 2019-09-04 12:47

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0010_group_group'),
    ]

    operations = [
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=False)),
                ('frequency', models.CharField(choices=[('MONTHLY', 'Monthly'), ('QUATERLY', 'Quaterly'), ('YEARLY', 'Yearly')], max_length=10)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'awards',
                'permissions': (('award_crud', 'can have all the access'),),
            },
        ),
        migrations.CreateModel(
            name='AwardTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominate_app.Awards')),
            ],
            options={
                'db_table': 'award_templates',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_comment', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nomination_comments',
            },
        ),
        migrations.CreateModel(
            name='DirectorComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'director_comment',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'nomination_likes',
            },
        ),
        migrations.CreateModel(
            name='Nomination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_day', models.DateField(max_length=20)),
                ('end_day', models.DateField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('award_template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nominate_app.AwardTemplate')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'db_table': 'nominations',
            },
        ),
        migrations.CreateModel(
            name='NominationAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('answer_option', models.BooleanField(blank=True, max_length=20, null=True)),
                ('answer_text', models.CharField(blank=True, max_length=500, null=True)),
                ('attachment_path', models.FileField(blank=True, max_length=500, null=True, upload_to='answers/images')),
                ('uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('award_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominate_app.AwardTemplate')),
            ],
            options={
                'db_table': 'nomination_answers',
            },
        ),
        migrations.CreateModel(
            name='NominationInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[('New', 0), ('Saved', 1), ('Submitted', 2), ('Reviewed', 3), ('Approved', 4), ('Dismissed', 5), ('On hold', 6)], default=0)),
                ('result', models.CharField(blank=True, max_length=50, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nomination', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='nominate_app.Nomination')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nomination_instances',
            },
        ),
        migrations.CreateModel(
            name='NominationPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_day', models.DateField(max_length=20)),
                ('end_day', models.DateField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominate_app.Awards')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'db_table': 'nomination_periods',
            },
        ),
        migrations.CreateModel(
            name='NominationRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[('null', 0), ('one', 1), ('two', 2), ('three', 3), ('four', 4), ('five', 5)], default=0)),
                ('review', models.TextField()),
                ('reviewed_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'nomination_rating',
            },
        ),
        migrations.CreateModel(
            name='NominationSubmitted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[('Submitted', 0), ('Reviewed', 1), ('Approved', 2), ('Dismissed', 3), ('On hold', 4)], default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('email', models.CharField(max_length=50)),
                ('firstname', models.CharField(max_length=30)),
                ('designation', models.CharField(default='', max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('award_name', models.CharField(max_length=30)),
                ('worklocation', models.CharField(default='', max_length=30)),
                ('baselocation', models.CharField(default='', max_length=30)),
                ('template_name', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('nomination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='nominate_app.Nomination')),
            ],
            options={
                'db_table': 'nomination_submitted',
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=100)),
                ('answer', models.CharField(blank=True, max_length=500, null=True)),
                ('attachment_path', models.FileField(blank=True, max_length=500, null=True, upload_to='answers/images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nomination_submitted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='nominate_app.NominationSubmitted')),
            ],
            options={
                'db_table': 'question_answers',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qname', models.CharField(max_length=100)),
                ('qtype', models.CharField(choices=[('SUBJECTIVE', 'subjective'), ('OBJECTIVE', 'objective'), ('MULTIPLE-CHOICE', 'multiple-choice')], default='subjective', max_length=100)),
                ('attachment_need', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('options', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=90), blank=True, null=True, size=20)),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('award_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominate_app.AwardTemplate')),
                ('groups', models.ManyToManyField(to='auth.Group')),
            ],
            options={
                'db_table': 'award_questions',
            },
        ),
        migrations.CreateModel(
            name='UserInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=500, null=True)),
                ('last_name', models.CharField(blank=True, max_length=500, null=True)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('baselocation', models.CharField(blank=True, max_length=500, null=True)),
                ('designation', models.CharField(blank=True, max_length=500, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'db_table': 'user_invite',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=70, unique=True)),
                ('designation', models.CharField(max_length=70)),
                ('telephonenumber', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('employeenumber', models.CharField(max_length=70)),
                ('jobtitle', models.CharField(max_length=70)),
                ('cn', models.CharField(max_length=70)),
                ('title', models.CharField(max_length=70)),
                ('lastpwdchange', models.CharField(max_length=70)),
                ('defaultpwd', models.CharField(max_length=70)),
                ('baselocation', models.CharField(max_length=70)),
                ('uid', models.CharField(max_length=70)),
                ('worklocation', models.CharField(max_length=70)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.AddField(
            model_name='nominationrating',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='nominate_app.NominationSubmitted'),
        ),
        migrations.AddField(
            model_name='nominationrating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='nominationanswers',
            name='nomination_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='nominate_app.NominationInstance'),
        ),
        migrations.AddField(
            model_name='nominationanswers',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominate_app.Questions'),
        ),
        migrations.AddField(
            model_name='nominationanswers',
            name='submitted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='like',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='nominate_app.NominationSubmitted'),
        ),
        migrations.AddField(
            model_name='like',
            name='voter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='directorcomments',
            name='nomination_submitted',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='director_comment', to='nominate_app.NominationSubmitted'),
        ),
        migrations.AddField(
            model_name='directorcomments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='director_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='nominate_app.NominationSubmitted'),
        ),
    ]
